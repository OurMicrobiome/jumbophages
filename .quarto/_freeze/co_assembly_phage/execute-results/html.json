{
  "hash": "436368846f6576a5d58c01e92144c503",
  "result": {
    "markdown": "---\ntitle: \"Targeted enrichment and discovery of jumbo phages\"\nauthor: \"Jeffrey Blanchard\"\ndate: \"5/4/2023\"\n---\n\n\n# Overview\n\nThis report is an analysis of the Barre Woods filter metagenomes from\nthe combined assembly Assembly, binning, quality control and\nclassification was done on KBase\n(<https://narrative.kbase.us/narrative/145971>. The checkv and virsorter files were downloaded to this project folder.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(tidyverse)\nlibrary(DT)\n```\n:::\n\n\n## virsorter2 and vcheck\n\n### Data processing\n\nvirsorter2 identifies dsDNAphages, NCLDV, ssDNA, virophages and some rna\nviruses in contigs. An 0.8 cutoff score is commonly used to remove\npotential false positives. checkv assesses the quality of contigs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvirsorter <- read_tsv(\"data_combined_assembly/virsorter-final-viral-score.tsv\") |> \n  filter(max_score_group == \"dsDNAphage\") |> \n  select(-c(dsDNAphage, ssDNA, NCLDV, lavidaviridae)) |> \n  rename(\"contig_id\" = \"seqname\")\n\ncheckv <- read_tsv(\"data_combined_assembly/coa-checkv_quality_summary.tsv\") \n```\n:::\n\n\n#### Join checkv and virsorter dataframes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvirsorter_checkv <- left_join(virsorter, checkv, by = \"contig_id\")\n```\n:::\n\n\n#### filter to high quality and complete genomes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvirsorter_checkv_HQ <- virsorter_checkv |> \n  filter(checkv_quality == \"Complete\" | checkv_quality == \"High-quality\")\n```\n:::\n\n\n#### filter to HQ jumbo phages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvirsorter_checkv_jumbo <- virsorter_checkv |> \n  filter(checkv_quality == \"Complete\" | checkv_quality == \"High-quality\") |> \n  filter(length >= 200000)\n```\n:::\n\n\n#### Write files\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# write summary file\nwrite_tsv(virsorter_checkv, \"data_combined_assembly/coa-virsorter_checkv.tsv\") \nwrite_tsv(virsorter_checkv_HQ, \"data_combined_assembly/coa-virsorter_checkv_HQ.tsv\") \nwrite_tsv(virsorter_checkv_jumbo, \"data_combined_assembly/coa-virsorter_checkv_jumbo.tsv\") \n```\n:::\n\n\n### Data analysis\n\n#### Barchart of checkv_quality\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvirsorter_checkv |> \nggplot(aes(x = checkv_quality)) + \n  geom_bar() \n```\n\n::: {.cell-output-display}\n![](co_assembly_phage_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n#### Table with % checkv_quality in each category\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvirsorter_checkv |> \n  mutate(across(checkv_quality, as_factor)) |> \n  group_by(checkv_quality) |> \n  summarise(n = n()) |>\n  mutate(freq = n / sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 Ã— 3\n  checkv_quality     n     freq\n  <fct>          <int>    <dbl>\n1 High-quality     372 0.0166  \n2 Complete          16 0.000714\n3 Medium-quality   450 0.0201  \n4 Not-determined  7551 0.337   \n5 Low-quality    14012 0.626   \n```\n:::\n:::\n\n\n#### Histogram of all contigs\n\nMost low quality contigs are less than 20kb\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvirsorter_checkv |> \nggplot(aes(x = length, fill = checkv_quality)) + \n  geom_histogram(colour = \"black\",  binwidth=10000) +\n  ggtitle(\"Genome size of Phage\") +\n  xlab(\"Genome size\") + \n  theme(text = element_text(size = 20, color=\"black\"))\n```\n\n::: {.cell-output-display}\n![](co_assembly_phage_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\n  theme(axis.text.x = element_text(angle = 90)) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 1\n $ axis.text.x:List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi FALSE\n - attr(*, \"validate\")= logi TRUE\n```\n:::\n:::\n\n\n#### Histogram of HQ contigs\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvirsorter_checkv_HQ |> \nggplot(aes(x = length, fill = checkv_quality)) + \n  geom_histogram(colour = \"black\",  binwidth=10000) +\n  ggtitle(\"Genome size of Phage\") +\n  xlab(\"Genome size\") + \n  #theme(text = element_text(size = 20, color=\"black\"))\n  theme(axis.text.x = element_text(angle = 45)) \n```\n\n::: {.cell-output-display}\n![](co_assembly_phage_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n## Merging GTDB and binning data with virsorter2 and vcheck\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read metabat files to get each contig and gtdb file\nmetabat <- read_tsv(\"data_combined_assembly/metabat_depth_contigs.tsv\") \ncheckm_gtdb <- read_tsv(\"data_combined_assembly/checkm_gtdb_NEB_coassembly_2.5k.tsv\") |> \n  select(-c(`Marker Lineage`,\t`# Genomes`,\t`# Markers`,\t`# Marker Sets`, `0`,\t`1`,\t`2`,\t`3`,\t`4`,\t`5`, `user_genome`))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# split contig name based on ||\nvirsorter_checkv_contig <- virsorter_checkv |> \n   separate(`contig_id`, c(\"contig_id\", \"full-partial\"), \"\\\\|\\\\|\") \n# join with metabat\nvirsorter_checkv_contig_metabat <- left_join(virsorter_checkv_contig, metabat, by = c(\"contig_id\" = \"seqname\"))\n# join with checkm_gtdb\nvirsorter_checkv_contig_metabat_checkm_gtdb <- left_join(virsorter_checkv_contig_metabat, checkm_gtdb, by = c(\"bin\"))\n```\n:::\n\n\n### contigs that mapped to HQ and MQ bins\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvirsorter_checkv_contig_metabat_checkm_gtdb_MQ <- virsorter_checkv_contig_metabat_checkm_gtdb |> \n  filter(Completeness > 50) |> \n  filter(Contamination < 10) \n\nvirsorter_checkv_contig_metabat_checkm_gtdb_noMQ <- virsorter_checkv_contig_metabat_checkm_gtdb |> \n  filter(Completeness < 50) \n```\n:::\n\n\n\n\n## vContact\n\nvContact groups contigs into clusters along with phages in NCBI's viurs\nreference database \\### data processing\n\n#### read in files\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvcontact <- read_csv(\"data_combined_assembly/vcontact_genome_by_genome_overview.csv\") \nvcontact_ntw <- read_table(\"data_combined_assembly/coa-vcontact_c1.ntw\", col_names = FALSE) \n```\n:::\n\n\n#### join with virsorter and checkv results\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvirsorter_checkv_HQ_vcontact <- left_join(virsorter_checkv_HQ, vcontact, by = c(\"contig_id\" = \"Genome\"))\nvirsorter_checkv_jumbo_vcontact <- left_join(virsorter_checkv_jumbo, vcontact, by = c(\"contig_id\" = \"Genome\"))\n```\n:::\n\n\n#### filter network files to contain just HQ or jumbo phages for cytoscape\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# make a vector of HQ and jumbo contigs\nHQ_contigs <- pull(virsorter_checkv_HQ, contig_id)\njumbo_contigs <- pull(virsorter_checkv_jumbo_vcontact, contig_id)  \n\n# create list of low quality genomes\n# There are genes in the vcontact network that are not in the merged virsorter/vcheck file\n# So first make a list of vcontact genomes with contig in name then filter HQ\n\nvcontact_contig_LQ <- vcontact |> \nfilter(grepl('Contig', Genome)) |> \nfilter(!Genome %in% HQ_contigs)\n\n# make a vector of low quality contigs \nLQ_contigs <- pull(vcontact_contig_LQ, Genome)  \n\n# filter vcontact network based on HQ genomes}\nvcontact_ntw_HQ <- vcontact_ntw |> \nfilter(X1 %in% HQ_contigs) |> \nfilter(!X1 %in% LQ_contigs & !X2 %in% LQ_contigs)\n\n# filter vcontact network based on jumbo genomes\nvcontact_ntw_jumbo <- vcontact_ntw |> \nfilter(X1 %in% jumbo_contigs) |> \nfilter(!X1 %in% LQ_contigs & !X2 %in% LQ_contigs)\n\n# filter vcontact network based on jumbo genomes and interaction score <30\nvcontact_ntw_jumbo30 <- vcontact_ntw_jumbo |> \n  filter(X3 > 30)\n```\n:::\n\n\n#### Write files\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_tsv(virsorter_checkv_HQ_vcontact, \"data_combined_assembly/coa-virsorter_checkv_HQ_vcontact.tsv\") \nwrite_tsv(virsorter_checkv_jumbo_vcontact,\"data_combined_assembly/coa-virsorter_checkv_jumbo_vcontact.tsv\") \nwrite.table(vcontact_ntw_HQ, \"data_combined_assembly/vcontact_ntw_HQ.ntw\", sep = \" \", col.names=F, row.names=F, quote=F)\nwrite.table(vcontact_ntw_jumbo, \"data_combined_assembly/vcontact_ntw_jumbo.ntw\", sep = \" \", col.names=F, row.names=F, quote=F)\nwrite.table(vcontact_ntw_jumbo30, \"data_combined_assembly/vcontact_ntw_jumbo30.ntw\", sep = \" \", col.names=F, row.names=F, quote=F)\n```\n:::\n\n\n### Data Analysis\n\n#### Histogram of interaction score\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvcontact_ntw_jumbo |> \nggplot(aes(x = X3)) + \n  geom_histogram(colour = \"black\",  binwidth=10) +\n  xlab(\"Score\") + \n  #theme(text = element_text(size = 20, color=\"black\"))\n  theme(axis.text.x = element_text(angle = 45)) \n```\n\n::: {.cell-output-display}\n![](co_assembly_phage_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n## Cytoscape\n\n### Notes\n\n#### To load network\n\nFile \\> Import\\> Network from file Open Advanced options Select\ndelimiter = space deselect use first column as names select col 1 as\nsource select col 2 as target select col 3 as edge\n\n#### To select a group of nodes\n\nshift then mouse drag\n\n### Data Analysis\n\n#### Jumbo30 network\n\n![jumbo30](data_combined_assembly/jumbo30_cytoscape_ntw.png)\n\n## DRAMv\n\n### Data processing\n\n#### Read files AMG summary and stats files\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDRAMv_amg <- read_tsv(\"data_combined_assembly/DRAMv_amg_summary.tsv\") |> \n  rename(\"contig_id\" = \"scaffold\")\nDRAMv_stats <- read_tsv(\"data_combined_assembly/DRAMv_vMAG_stats.tsv\") |> \n  rename(\"contig_id\" = \"...1\")\n```\n:::\n\n\n#### join with stats virsorter and checkv results\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDRAMv_stats_virsorter_checkv_HQ <- left_join(virsorter_checkv_HQ, DRAMv_stats, by = \"contig_id\")\nDRAMv_stats_virsorter_checkv_jumbo <- left_join(virsorter_checkv_jumbo, DRAMv_stats, by = \"contig_id\")\n```\n:::\n\n\n#### Add annotation to tibble with AMG names\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDRAMv_amg_virsorter_checkv <- left_join(DRAMv_amg, virsorter_checkv, by = \"contig_id\")\n```\n:::\n\n\n#### filter amd files to HQ and jumbo\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDRAMv_amg_virsorter_checkv_HQ <- DRAMv_amg_virsorter_checkv |> \nfilter(contig_id %in% HQ_contigs)\n\nDRAMv_amg_virsorter_checkv_jumbo <- DRAMv_amg_virsorter_checkv |> \nfilter(contig_id %in% jumbo_contigs)\n```\n:::\n\n\n#### Write files\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_tsv(DRAMv_stats_virsorter_checkv_HQ, \"data_combined_assembly/coa-DRAMv_stats_virsorter_checkv_HQ .tsv\") \nwrite_tsv(DRAMv_stats_virsorter_checkv_jumbo,\"data_combined_assembly/coa-DRAMv_stats_virsorter_checkv_jumbo.tsv\") \nwrite_tsv(DRAMv_amg_virsorter_checkv_HQ, \"data_combined_assembly/coa-DRAMv_amg_virsorter_checkv_HQ.tsv\") \nwrite_tsv(DRAMv_amg_virsorter_checkv_jumbo,\"data_combined_assembly/coa-DRAMv_amg_virsorter_checkv_jumbo.tsv\") \n```\n:::\n\n\n### Data Analysis\n\n#### Graph of genes vs amgs in HQ\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDRAMv_stats_virsorter_checkv_HQ |> \nggplot(aes(x = `Gene count`, y = `potential AMG count`)) + \n  geom_point() \n```\n\n::: {.cell-output-display}\n![](co_assembly_phage_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n#### Graph of genes vs amgs in HQ no provirus\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDRAMv_stats_virsorter_checkv_HQ |> \n  filter(provirus == \"No\") |> \nggplot(aes(x = `Gene count`, y = `potential AMG count`)) + \n  geom_point() \n```\n\n::: {.cell-output-display}\n![](co_assembly_phage_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n#### Graph of genes vs iral genes with host benefits in HQ no provirus\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDRAMv_stats_virsorter_checkv_HQ |> \n  filter(provirus == \"No\") |> \nggplot(aes(x = `Gene count`, y = `Viral genes with host benefits`)) + \n  geom_point() \n```\n\n::: {.cell-output-display}\n![](co_assembly_phage_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n#### Genome length vs gene count\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDRAMv_stats_virsorter_checkv_HQ |> \n    filter(provirus == \"No\") |> \nggplot(aes(x = `length`, y = `Gene count`)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](co_assembly_phage_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n#### HQ contigs with transposes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDRAMv_stats_virsorter_checkv_HQ |> \n    filter(provirus == \"No\") |> \nggplot(aes(x = `length`, y = `Gene count`)) + \n  geom_point(aes(colour = `Transposase present`))\n```\n\n::: {.cell-output-display}\n![](co_assembly_phage_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n#### tRNA count per genome\n\n## virmatcher\n\n### Data Processing\n\n#### Join the virmatcher results csv with the virsorter_checkv_HQ and checkM_GTDB files to get virus and bacteria annotation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvirmatch <- read_csv(\"data_combined_assembly/coa-virmatcher.csv\") |> \n  rename(\"contig_id\" = \"Original Viral population\") |> \n  rename(\"bin\" = \"Original Host\")\n\ncheckm_gtdb <- read_tsv(\"data_combined_assembly/checkm_gtdb_NEB_coassembly_2.5k.tsv\") \n\ndetect_viral_bins_final_calls <- read_tsv(\"data_combined_assembly/detect_viral_bins_final_calls.tsv\") \n```\n:::\n\n\n#### Remove proviruses and low quality bins\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvirsorter_checkv_HQ_virmatch <- left_join(virsorter_checkv_HQ, virmatch, by = \"contig_id\") \nvirsorter_checkv_HQ_virmatch_checkm_gtdb <- left_join(virsorter_checkv_HQ_virmatch, checkm_gtdb, by = \"bin\") |> \n  filter(Completeness > 50) |> \n  filter(Contamination < 10)\n```\n:::\n\n\nShould check to see if any HQ phage are in bins which would complicate\nresults. Find bin associated with contig\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### to map contigs to bins\nmetabat_bins_contigs <- read_tsv(\"data_combined_assembly/metabat_depth_contigs.tsv\") |> \n  rename(\"contig_id\" = \"seqname\") |> \n  select(-c(contigLen, totalAvgDepth, `contig_%GC`)) \nvirsorter_checkv_HQ_virmatch_checkm_gtdb$contig_id <- str_replace_all(virsorter_checkv_HQ_virmatch_checkm_gtdb$contig_id, \"full\", \"\")\nvirsorter_checkv_HQ_virmatch_checkm_gtdb$contig_id <- str_replace_all(virsorter_checkv_HQ_virmatch_checkm_gtdb$contig_id, \"[[|]]\", \"\")\n\nvirsorter_checkv_HQ_virmatch_checkm_gtdb_bin <- left_join(virsorter_checkv_HQ_virmatch_checkm_gtdb, metabat_bins_contigs, by = \"contig_id\")\nwrite_tsv(virsorter_checkv_HQ_virmatch_checkm_gtdb_bin, \"data_combined_assembly/virsorter_checkv_HQ_virmatch_checkm_gtdb_bin.tsv\") \n```\n:::\n\n\nGenetic exchange shapes ultra-small Patescibacteria metabolic capacities\nin the terrestrial subsurface\n<https://www.biorxiv.org/content/10.1101/2022.10.05.510940v2.full>\n\nFrom MAGs to riches: exploring the microbial community of activated\nsludge using high-quality MAGS\n<https://www.youtube.com/watch?v=EzIN7ycK6-E> They also identified 38\nreduced-genome bacteria and archaea, including one Paceibacteria genome:\nan exciting find, as organisms from this group had not previously been\ncharacterised in situ. Using the 16S sequences, they were able to design\nFISH probes and visualise the bacterium; assembly of the genome also\nidentified versions with and without an additional fragment which was\nrevealed to represent a pha\n\n<https://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.3002083>\n",
    "supporting": [
      "co_assembly_phage_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}